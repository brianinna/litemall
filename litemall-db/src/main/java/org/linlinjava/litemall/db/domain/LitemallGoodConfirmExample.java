package org.linlinjava.litemall.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class LitemallGoodConfirmExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated
     */
    public LitemallGoodConfirmExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated
     */
    public LitemallGoodConfirmExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated
     */
    public LitemallGoodConfirmExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LitemallGoodConfirmExample example = new LitemallGoodConfirmExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated
     */
    public LitemallGoodConfirmExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated
     */
    public LitemallGoodConfirmExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andOrderIdIsNull() {
            addCriterion("order_id is null");
            return (Criteria) this;
        }

        public Criteria andOrderIdIsNotNull() {
            addCriterion("order_id is not null");
            return (Criteria) this;
        }

        public Criteria andOrderIdEqualTo(Integer value) {
            addCriterion("order_id =", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderIdEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdNotEqualTo(Integer value) {
            addCriterion("order_id <>", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderIdNotEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdGreaterThan(Integer value) {
            addCriterion("order_id >", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderIdGreaterThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("order_id >=", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderIdGreaterThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdLessThan(Integer value) {
            addCriterion("order_id <", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderIdLessThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdLessThanOrEqualTo(Integer value) {
            addCriterion("order_id <=", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderIdLessThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdIn(List<Integer> values) {
            addCriterion("order_id in", values, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdNotIn(List<Integer> values) {
            addCriterion("order_id not in", values, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdBetween(Integer value1, Integer value2) {
            addCriterion("order_id between", value1, value2, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdNotBetween(Integer value1, Integer value2) {
            addCriterion("order_id not between", value1, value2, "orderId");
            return (Criteria) this;
        }

        public Criteria andOriginalNumIsNull() {
            addCriterion("original_num is null");
            return (Criteria) this;
        }

        public Criteria andOriginalNumIsNotNull() {
            addCriterion("original_num is not null");
            return (Criteria) this;
        }

        public Criteria andOriginalNumEqualTo(Integer value) {
            addCriterion("original_num =", value, "originalNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOriginalNumEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("original_num = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOriginalNumNotEqualTo(Integer value) {
            addCriterion("original_num <>", value, "originalNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOriginalNumNotEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("original_num <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOriginalNumGreaterThan(Integer value) {
            addCriterion("original_num >", value, "originalNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOriginalNumGreaterThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("original_num > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOriginalNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("original_num >=", value, "originalNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOriginalNumGreaterThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("original_num >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOriginalNumLessThan(Integer value) {
            addCriterion("original_num <", value, "originalNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOriginalNumLessThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("original_num < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOriginalNumLessThanOrEqualTo(Integer value) {
            addCriterion("original_num <=", value, "originalNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOriginalNumLessThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("original_num <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOriginalNumIn(List<Integer> values) {
            addCriterion("original_num in", values, "originalNum");
            return (Criteria) this;
        }

        public Criteria andOriginalNumNotIn(List<Integer> values) {
            addCriterion("original_num not in", values, "originalNum");
            return (Criteria) this;
        }

        public Criteria andOriginalNumBetween(Integer value1, Integer value2) {
            addCriterion("original_num between", value1, value2, "originalNum");
            return (Criteria) this;
        }

        public Criteria andOriginalNumNotBetween(Integer value1, Integer value2) {
            addCriterion("original_num not between", value1, value2, "originalNum");
            return (Criteria) this;
        }

        public Criteria andOtherNumIsNull() {
            addCriterion("other_num is null");
            return (Criteria) this;
        }

        public Criteria andOtherNumIsNotNull() {
            addCriterion("other_num is not null");
            return (Criteria) this;
        }

        public Criteria andOtherNumEqualTo(Integer value) {
            addCriterion("other_num =", value, "otherNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOtherNumEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("other_num = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNumNotEqualTo(Integer value) {
            addCriterion("other_num <>", value, "otherNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOtherNumNotEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("other_num <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNumGreaterThan(Integer value) {
            addCriterion("other_num >", value, "otherNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOtherNumGreaterThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("other_num > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("other_num >=", value, "otherNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOtherNumGreaterThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("other_num >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNumLessThan(Integer value) {
            addCriterion("other_num <", value, "otherNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOtherNumLessThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("other_num < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNumLessThanOrEqualTo(Integer value) {
            addCriterion("other_num <=", value, "otherNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOtherNumLessThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("other_num <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNumIn(List<Integer> values) {
            addCriterion("other_num in", values, "otherNum");
            return (Criteria) this;
        }

        public Criteria andOtherNumNotIn(List<Integer> values) {
            addCriterion("other_num not in", values, "otherNum");
            return (Criteria) this;
        }

        public Criteria andOtherNumBetween(Integer value1, Integer value2) {
            addCriterion("other_num between", value1, value2, "otherNum");
            return (Criteria) this;
        }

        public Criteria andOtherNumNotBetween(Integer value1, Integer value2) {
            addCriterion("other_num not between", value1, value2, "otherNum");
            return (Criteria) this;
        }

        public Criteria andFundPayIsNull() {
            addCriterion("fund_pay is null");
            return (Criteria) this;
        }

        public Criteria andFundPayIsNotNull() {
            addCriterion("fund_pay is not null");
            return (Criteria) this;
        }

        public Criteria andFundPayEqualTo(String value) {
            addCriterion("fund_pay =", value, "fundPay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundPayEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_pay = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundPayNotEqualTo(String value) {
            addCriterion("fund_pay <>", value, "fundPay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundPayNotEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_pay <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundPayGreaterThan(String value) {
            addCriterion("fund_pay >", value, "fundPay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundPayGreaterThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_pay > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundPayGreaterThanOrEqualTo(String value) {
            addCriterion("fund_pay >=", value, "fundPay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundPayGreaterThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_pay >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundPayLessThan(String value) {
            addCriterion("fund_pay <", value, "fundPay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundPayLessThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_pay < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundPayLessThanOrEqualTo(String value) {
            addCriterion("fund_pay <=", value, "fundPay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundPayLessThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_pay <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundPayLike(String value) {
            addCriterion("fund_pay like", value, "fundPay");
            return (Criteria) this;
        }

        public Criteria andFundPayNotLike(String value) {
            addCriterion("fund_pay not like", value, "fundPay");
            return (Criteria) this;
        }

        public Criteria andFundPayIn(List<String> values) {
            addCriterion("fund_pay in", values, "fundPay");
            return (Criteria) this;
        }

        public Criteria andFundPayNotIn(List<String> values) {
            addCriterion("fund_pay not in", values, "fundPay");
            return (Criteria) this;
        }

        public Criteria andFundPayBetween(String value1, String value2) {
            addCriterion("fund_pay between", value1, value2, "fundPay");
            return (Criteria) this;
        }

        public Criteria andFundPayNotBetween(String value1, String value2) {
            addCriterion("fund_pay not between", value1, value2, "fundPay");
            return (Criteria) this;
        }

        public Criteria andFundPriceIsNull() {
            addCriterion("fund_price is null");
            return (Criteria) this;
        }

        public Criteria andFundPriceIsNotNull() {
            addCriterion("fund_price is not null");
            return (Criteria) this;
        }

        public Criteria andFundPriceEqualTo(Integer value) {
            addCriterion("fund_price =", value, "fundPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundPriceEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundPriceNotEqualTo(Integer value) {
            addCriterion("fund_price <>", value, "fundPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundPriceNotEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundPriceGreaterThan(Integer value) {
            addCriterion("fund_price >", value, "fundPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundPriceGreaterThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundPriceGreaterThanOrEqualTo(Integer value) {
            addCriterion("fund_price >=", value, "fundPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundPriceGreaterThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundPriceLessThan(Integer value) {
            addCriterion("fund_price <", value, "fundPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundPriceLessThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundPriceLessThanOrEqualTo(Integer value) {
            addCriterion("fund_price <=", value, "fundPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundPriceLessThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundPriceIn(List<Integer> values) {
            addCriterion("fund_price in", values, "fundPrice");
            return (Criteria) this;
        }

        public Criteria andFundPriceNotIn(List<Integer> values) {
            addCriterion("fund_price not in", values, "fundPrice");
            return (Criteria) this;
        }

        public Criteria andFundPriceBetween(Integer value1, Integer value2) {
            addCriterion("fund_price between", value1, value2, "fundPrice");
            return (Criteria) this;
        }

        public Criteria andFundPriceNotBetween(Integer value1, Integer value2) {
            addCriterion("fund_price not between", value1, value2, "fundPrice");
            return (Criteria) this;
        }

        public Criteria andOrderTimeIsNull() {
            addCriterion("order_time is null");
            return (Criteria) this;
        }

        public Criteria andOrderTimeIsNotNull() {
            addCriterion("order_time is not null");
            return (Criteria) this;
        }

        public Criteria andOrderTimeEqualTo(Integer value) {
            addCriterion("order_time =", value, "orderTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderTimeEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderTimeNotEqualTo(Integer value) {
            addCriterion("order_time <>", value, "orderTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderTimeNotEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderTimeGreaterThan(Integer value) {
            addCriterion("order_time >", value, "orderTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderTimeGreaterThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("order_time >=", value, "orderTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderTimeGreaterThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderTimeLessThan(Integer value) {
            addCriterion("order_time <", value, "orderTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderTimeLessThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderTimeLessThanOrEqualTo(Integer value) {
            addCriterion("order_time <=", value, "orderTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderTimeLessThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderTimeIn(List<Integer> values) {
            addCriterion("order_time in", values, "orderTime");
            return (Criteria) this;
        }

        public Criteria andOrderTimeNotIn(List<Integer> values) {
            addCriterion("order_time not in", values, "orderTime");
            return (Criteria) this;
        }

        public Criteria andOrderTimeBetween(Integer value1, Integer value2) {
            addCriterion("order_time between", value1, value2, "orderTime");
            return (Criteria) this;
        }

        public Criteria andOrderTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("order_time not between", value1, value2, "orderTime");
            return (Criteria) this;
        }

        public Criteria andCourierIdIsNull() {
            addCriterion("courier_id is null");
            return (Criteria) this;
        }

        public Criteria andCourierIdIsNotNull() {
            addCriterion("courier_id is not null");
            return (Criteria) this;
        }

        public Criteria andCourierIdEqualTo(Integer value) {
            addCriterion("courier_id =", value, "courierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andCourierIdEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("courier_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCourierIdNotEqualTo(Integer value) {
            addCriterion("courier_id <>", value, "courierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andCourierIdNotEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("courier_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCourierIdGreaterThan(Integer value) {
            addCriterion("courier_id >", value, "courierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andCourierIdGreaterThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("courier_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCourierIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("courier_id >=", value, "courierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andCourierIdGreaterThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("courier_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCourierIdLessThan(Integer value) {
            addCriterion("courier_id <", value, "courierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andCourierIdLessThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("courier_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCourierIdLessThanOrEqualTo(Integer value) {
            addCriterion("courier_id <=", value, "courierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andCourierIdLessThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("courier_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCourierIdIn(List<Integer> values) {
            addCriterion("courier_id in", values, "courierId");
            return (Criteria) this;
        }

        public Criteria andCourierIdNotIn(List<Integer> values) {
            addCriterion("courier_id not in", values, "courierId");
            return (Criteria) this;
        }

        public Criteria andCourierIdBetween(Integer value1, Integer value2) {
            addCriterion("courier_id between", value1, value2, "courierId");
            return (Criteria) this;
        }

        public Criteria andCourierIdNotBetween(Integer value1, Integer value2) {
            addCriterion("courier_id not between", value1, value2, "courierId");
            return (Criteria) this;
        }

        public Criteria andCourierNameIsNull() {
            addCriterion("courier_name is null");
            return (Criteria) this;
        }

        public Criteria andCourierNameIsNotNull() {
            addCriterion("courier_name is not null");
            return (Criteria) this;
        }

        public Criteria andCourierNameEqualTo(String value) {
            addCriterion("courier_name =", value, "courierName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andCourierNameEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("courier_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCourierNameNotEqualTo(String value) {
            addCriterion("courier_name <>", value, "courierName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andCourierNameNotEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("courier_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCourierNameGreaterThan(String value) {
            addCriterion("courier_name >", value, "courierName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andCourierNameGreaterThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("courier_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCourierNameGreaterThanOrEqualTo(String value) {
            addCriterion("courier_name >=", value, "courierName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andCourierNameGreaterThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("courier_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCourierNameLessThan(String value) {
            addCriterion("courier_name <", value, "courierName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andCourierNameLessThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("courier_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCourierNameLessThanOrEqualTo(String value) {
            addCriterion("courier_name <=", value, "courierName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andCourierNameLessThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("courier_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCourierNameLike(String value) {
            addCriterion("courier_name like", value, "courierName");
            return (Criteria) this;
        }

        public Criteria andCourierNameNotLike(String value) {
            addCriterion("courier_name not like", value, "courierName");
            return (Criteria) this;
        }

        public Criteria andCourierNameIn(List<String> values) {
            addCriterion("courier_name in", values, "courierName");
            return (Criteria) this;
        }

        public Criteria andCourierNameNotIn(List<String> values) {
            addCriterion("courier_name not in", values, "courierName");
            return (Criteria) this;
        }

        public Criteria andCourierNameBetween(String value1, String value2) {
            addCriterion("courier_name between", value1, value2, "courierName");
            return (Criteria) this;
        }

        public Criteria andCourierNameNotBetween(String value1, String value2) {
            addCriterion("courier_name not between", value1, value2, "courierName");
            return (Criteria) this;
        }

        public Criteria andOrderDateIsNull() {
            addCriterion("order_date is null");
            return (Criteria) this;
        }

        public Criteria andOrderDateIsNotNull() {
            addCriterion("order_date is not null");
            return (Criteria) this;
        }

        public Criteria andOrderDateEqualTo(LocalDateTime value) {
            addCriterion("order_date =", value, "orderDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderDateEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderDateNotEqualTo(LocalDateTime value) {
            addCriterion("order_date <>", value, "orderDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderDateNotEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderDateGreaterThan(LocalDateTime value) {
            addCriterion("order_date >", value, "orderDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderDateGreaterThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderDateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("order_date >=", value, "orderDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderDateGreaterThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderDateLessThan(LocalDateTime value) {
            addCriterion("order_date <", value, "orderDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderDateLessThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderDateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("order_date <=", value, "orderDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderDateLessThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderDateIn(List<LocalDateTime> values) {
            addCriterion("order_date in", values, "orderDate");
            return (Criteria) this;
        }

        public Criteria andOrderDateNotIn(List<LocalDateTime> values) {
            addCriterion("order_date not in", values, "orderDate");
            return (Criteria) this;
        }

        public Criteria andOrderDateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("order_date between", value1, value2, "orderDate");
            return (Criteria) this;
        }

        public Criteria andOrderDateNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("order_date not between", value1, value2, "orderDate");
            return (Criteria) this;
        }

        public Criteria andFundPayNumIsNull() {
            addCriterion("fund_pay_num is null");
            return (Criteria) this;
        }

        public Criteria andFundPayNumIsNotNull() {
            addCriterion("fund_pay_num is not null");
            return (Criteria) this;
        }

        public Criteria andFundPayNumEqualTo(Integer value) {
            addCriterion("fund_pay_num =", value, "fundPayNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundPayNumEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_pay_num = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundPayNumNotEqualTo(Integer value) {
            addCriterion("fund_pay_num <>", value, "fundPayNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundPayNumNotEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_pay_num <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundPayNumGreaterThan(Integer value) {
            addCriterion("fund_pay_num >", value, "fundPayNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundPayNumGreaterThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_pay_num > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundPayNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("fund_pay_num >=", value, "fundPayNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundPayNumGreaterThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_pay_num >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundPayNumLessThan(Integer value) {
            addCriterion("fund_pay_num <", value, "fundPayNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundPayNumLessThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_pay_num < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundPayNumLessThanOrEqualTo(Integer value) {
            addCriterion("fund_pay_num <=", value, "fundPayNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundPayNumLessThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_pay_num <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundPayNumIn(List<Integer> values) {
            addCriterion("fund_pay_num in", values, "fundPayNum");
            return (Criteria) this;
        }

        public Criteria andFundPayNumNotIn(List<Integer> values) {
            addCriterion("fund_pay_num not in", values, "fundPayNum");
            return (Criteria) this;
        }

        public Criteria andFundPayNumBetween(Integer value1, Integer value2) {
            addCriterion("fund_pay_num between", value1, value2, "fundPayNum");
            return (Criteria) this;
        }

        public Criteria andFundPayNumNotBetween(Integer value1, Integer value2) {
            addCriterion("fund_pay_num not between", value1, value2, "fundPayNum");
            return (Criteria) this;
        }

        public Criteria andFundCardNumIsNull() {
            addCriterion("fund_card_num is null");
            return (Criteria) this;
        }

        public Criteria andFundCardNumIsNotNull() {
            addCriterion("fund_card_num is not null");
            return (Criteria) this;
        }

        public Criteria andFundCardNumEqualTo(Integer value) {
            addCriterion("fund_card_num =", value, "fundCardNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundCardNumEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_card_num = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundCardNumNotEqualTo(Integer value) {
            addCriterion("fund_card_num <>", value, "fundCardNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundCardNumNotEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_card_num <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundCardNumGreaterThan(Integer value) {
            addCriterion("fund_card_num >", value, "fundCardNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundCardNumGreaterThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_card_num > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundCardNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("fund_card_num >=", value, "fundCardNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundCardNumGreaterThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_card_num >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundCardNumLessThan(Integer value) {
            addCriterion("fund_card_num <", value, "fundCardNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundCardNumLessThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_card_num < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundCardNumLessThanOrEqualTo(Integer value) {
            addCriterion("fund_card_num <=", value, "fundCardNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andFundCardNumLessThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("fund_card_num <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundCardNumIn(List<Integer> values) {
            addCriterion("fund_card_num in", values, "fundCardNum");
            return (Criteria) this;
        }

        public Criteria andFundCardNumNotIn(List<Integer> values) {
            addCriterion("fund_card_num not in", values, "fundCardNum");
            return (Criteria) this;
        }

        public Criteria andFundCardNumBetween(Integer value1, Integer value2) {
            addCriterion("fund_card_num between", value1, value2, "fundCardNum");
            return (Criteria) this;
        }

        public Criteria andFundCardNumNotBetween(Integer value1, Integer value2) {
            addCriterion("fund_card_num not between", value1, value2, "fundCardNum");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andUserIdEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("user_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andUserIdNotEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("user_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("user_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("user_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("user_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("user_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andTotalOweIsNull() {
            addCriterion("total_owe is null");
            return (Criteria) this;
        }

        public Criteria andTotalOweIsNotNull() {
            addCriterion("total_owe is not null");
            return (Criteria) this;
        }

        public Criteria andTotalOweEqualTo(Integer value) {
            addCriterion("total_owe =", value, "totalOwe");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andTotalOweEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("total_owe = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalOweNotEqualTo(Integer value) {
            addCriterion("total_owe <>", value, "totalOwe");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andTotalOweNotEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("total_owe <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalOweGreaterThan(Integer value) {
            addCriterion("total_owe >", value, "totalOwe");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andTotalOweGreaterThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("total_owe > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalOweGreaterThanOrEqualTo(Integer value) {
            addCriterion("total_owe >=", value, "totalOwe");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andTotalOweGreaterThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("total_owe >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalOweLessThan(Integer value) {
            addCriterion("total_owe <", value, "totalOwe");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andTotalOweLessThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("total_owe < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalOweLessThanOrEqualTo(Integer value) {
            addCriterion("total_owe <=", value, "totalOwe");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andTotalOweLessThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("total_owe <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalOweIn(List<Integer> values) {
            addCriterion("total_owe in", values, "totalOwe");
            return (Criteria) this;
        }

        public Criteria andTotalOweNotIn(List<Integer> values) {
            addCriterion("total_owe not in", values, "totalOwe");
            return (Criteria) this;
        }

        public Criteria andTotalOweBetween(Integer value1, Integer value2) {
            addCriterion("total_owe between", value1, value2, "totalOwe");
            return (Criteria) this;
        }

        public Criteria andTotalOweNotBetween(Integer value1, Integer value2) {
            addCriterion("total_owe not between", value1, value2, "totalOwe");
            return (Criteria) this;
        }

        public Criteria andOrderGoodNumIsNull() {
            addCriterion("order_good_num is null");
            return (Criteria) this;
        }

        public Criteria andOrderGoodNumIsNotNull() {
            addCriterion("order_good_num is not null");
            return (Criteria) this;
        }

        public Criteria andOrderGoodNumEqualTo(Integer value) {
            addCriterion("order_good_num =", value, "orderGoodNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderGoodNumEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_good_num = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderGoodNumNotEqualTo(Integer value) {
            addCriterion("order_good_num <>", value, "orderGoodNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderGoodNumNotEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_good_num <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderGoodNumGreaterThan(Integer value) {
            addCriterion("order_good_num >", value, "orderGoodNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderGoodNumGreaterThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_good_num > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderGoodNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("order_good_num >=", value, "orderGoodNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderGoodNumGreaterThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_good_num >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderGoodNumLessThan(Integer value) {
            addCriterion("order_good_num <", value, "orderGoodNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderGoodNumLessThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_good_num < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderGoodNumLessThanOrEqualTo(Integer value) {
            addCriterion("order_good_num <=", value, "orderGoodNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andOrderGoodNumLessThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("order_good_num <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderGoodNumIn(List<Integer> values) {
            addCriterion("order_good_num in", values, "orderGoodNum");
            return (Criteria) this;
        }

        public Criteria andOrderGoodNumNotIn(List<Integer> values) {
            addCriterion("order_good_num not in", values, "orderGoodNum");
            return (Criteria) this;
        }

        public Criteria andOrderGoodNumBetween(Integer value1, Integer value2) {
            addCriterion("order_good_num between", value1, value2, "orderGoodNum");
            return (Criteria) this;
        }

        public Criteria andOrderGoodNumNotBetween(Integer value1, Integer value2) {
            addCriterion("order_good_num not between", value1, value2, "orderGoodNum");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andAddTimeEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andAddTimeNotEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanOrEqualToColumn(LitemallGoodConfirm.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        private LitemallGoodConfirmExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        protected Criteria(LitemallGoodConfirmExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public LitemallGoodConfirmExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table litemall_good_confirm
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_good_confirm
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_good_confirm
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.LitemallGoodConfirmExample example);
    }
}